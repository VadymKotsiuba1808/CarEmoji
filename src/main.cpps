#include <Arduino.h>
#include <BitmapProcessing.h>
#include "BluetoothSerial.h"
#include "matrix.h"

// extern void init_matrix();
// extern void drawBitmap(int16_t x, int16_t y, const gimp32x32bitmap *bitmap);
BluetoothSerial SerialBT;

void setup()
{
  // Serial.begin(115200);
  SerialBT.begin("ESP32MatrixPic");
  init_matrix();
}

void loop()
{

  ///////////////////////////////////////////////////////////////////////////////
  if (SerialBT.available() > 0)
  {
    uint8_t firstBufer[2500] = {0};
    String command = "";
    static int comandArrSize = 2;
    static int dataArrSize = 2;
    int resultreadBytes = SerialBT.readBytes(firstBufer, 2500);
    uint8_t data[resultreadBytes] = {0};
    Serial.print("Total byte sending: ");
    Serial.println(resultreadBytes);

    for (size_t i = 0; i < resultreadBytes; i++)
    {
      if ((char)firstBufer[i] == '\n')
      {
        comandArrSize = i - 1;
        dataArrSize = (((resultreadBytes - 1) - i) / 2);
        Serial.println(comandArrSize);
        Serial.println(dataArrSize);
      }
      data[i] = firstBufer[i];
    }
    for (size_t i = 0; i < comandArrSize; i++)
    {
      command.concat((char)firstBufer[i]);
    }
    Serial.println();
    Serial.print("Comand: ");
    Serial.println(command);

    uint16_t DataArr[dataArrSize] = {0}; /// TEST

    for (int i = resultreadBytes - 1, j = dataArrSize - 1; j >= 0; j--, i -= 2)
    {
      DataArr[j] = ((data[i - 1] << 8) | data[i]); /// TEST
    }

    if (command == "WRITE_CURRENT")
    {
      for (unsigned int i = 0, k = 0; i < 32; i++)
      {
        for (unsigned int j = 0; j < 32; j++, k++)
        {
          backgroundLayer.drawPixel(j, i, rgb16(DataArr[k]));
          Serial.print(DataArr[k], HEX);
          Serial.print(", ");
        }
        Serial.println();
      }
      backgroundLayer.swapBuffers();
    }
  }
  ////////////////////////////////////////////////////////////////////
}
